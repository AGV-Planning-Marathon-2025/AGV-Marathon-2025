// generated from rosidl_adapter/resource/msg.idl.em
// with input from foxglove_msgs/msg/CompressedVideo.msg
// generated code does not contain a copyright notice

#include "builtin_interfaces/msg/Time.idl"

module foxglove_msgs {
  module msg {
    @verbatim (language="comment", text=
      "foxglove_msgs/msg/CompressedVideo" "\n"
      "A single frame of a compressed video bitstream")
    struct CompressedVideo {
      @verbatim (language="comment", text=
        "Generated by https://github.com/foxglove/schemas" "\n"
        "Timestamp of video frame")
      builtin_interfaces::msg::Time timestamp;

      @verbatim (language="comment", text=
        "Frame of reference for the video." "\n"
        "" "\n"
        "The origin of the frame is the optical center of the camera. +x points to the right in the video, +y points down, and +z points into the plane of the video.")
      string frame_id;

      @verbatim (language="comment", text=
        "Compressed video frame data." "\n"
        "" "\n"
        "For packet-based video codecs this data must begin and end on packet boundaries (no partial packets), and must contain enough video packets to decode exactly one image (either a keyframe or delta frame). Note: Foxglove does not support video streams that include B frames because they require lookahead.")
      sequence<uint8> data;

      @verbatim (language="comment", text=
        "Video format." "\n"
        "" "\n"
        "Supported values: `h264` (Annex B formatted data only)")
      string format;
    };
  };
};
