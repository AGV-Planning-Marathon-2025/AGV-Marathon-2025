// generated from rosidl_adapter/resource/msg.idl.em
// with input from foxglove_msgs/msg/TriangleListPrimitive.msg
// generated code does not contain a copyright notice

#include "foxglove_msgs/msg/Color.idl"
#include "geometry_msgs/msg/Point.idl"
#include "geometry_msgs/msg/Pose.idl"

module foxglove_msgs {
  module msg {
    @verbatim (language="comment", text=
      "foxglove_msgs/msg/TriangleListPrimitive" "\n"
      "A primitive representing a set of triangles or a surface tiled by triangles")
    struct TriangleListPrimitive {
      @verbatim (language="comment", text=
        "Generated by https://github.com/foxglove/schemas" "\n"
        "Origin of triangles relative to reference frame")
      geometry_msgs::msg::Pose pose;

      @verbatim (language="comment", text=
        "Vertices to use for triangles, interpreted as a list of triples (0-1-2, 3-4-5, ...)")
      sequence<geometry_msgs::msg::Point> points;

      @verbatim (language="comment", text=
        "Solid color to use for the whole shape. One of `color` or `colors` must be provided.")
      foxglove_msgs::msg::Color color;

      @verbatim (language="comment", text=
        "Per-vertex colors (if specified, must have the same length as `points`). One of `color` or `colors` must be provided.")
      sequence<foxglove_msgs::msg::Color> colors;

      @verbatim (language="comment", text=
        "Indices into the `points` and `colors` attribute arrays, which can be used to avoid duplicating attribute data." "\n"
        "" "\n"
        "If omitted or empty, indexing will not be used. This default behavior is equivalent to specifying [0, 1, ..., N-1] for the indices (where N is the number of `points` provided).")
      sequence<uint32> indices;
    };
  };
};
