// generated from rosidl_adapter/resource/msg.idl.em
// with input from foxglove_msgs/msg/PointsAnnotation.msg
// generated code does not contain a copyright notice

#include "builtin_interfaces/msg/Time.idl"
#include "foxglove_msgs/msg/Color.idl"
#include "foxglove_msgs/msg/Point2.idl"

module foxglove_msgs {
  module msg {
    module PointsAnnotation_Constants {
      const uint8 UNKNOWN = 0;
      @verbatim (language="comment", text=
        "Individual points: 0, 1, 2, ...")
      const uint8 POINTS = 1;
      @verbatim (language="comment", text=
        "Closed polygon: 0-1, 1-2, ..., (n-1)-n, n-0")
      const uint8 LINE_LOOP = 2;
      @verbatim (language="comment", text=
        "Connected line segments: 0-1, 1-2, ..., (n-1)-n")
      const uint8 LINE_STRIP = 3;
      @verbatim (language="comment", text=
        "Individual line segments: 0-1, 2-3, 4-5, ...")
      const uint8 LINE_LIST = 4;
    };
    @verbatim (language="comment", text=
      "foxglove_msgs/msg/PointsAnnotation" "\n"
      "An array of points on a 2D image")
    struct PointsAnnotation {
      @verbatim (language="comment", text=
        "Generated by https://github.com/foxglove/schemas" "\n"
        "Timestamp of annotation")
      builtin_interfaces::msg::Time timestamp;

      @verbatim (language="comment", text=
        "Type of points annotation to draw")
      uint8 type;

      @verbatim (language="comment", text=
        "Points in 2D image coordinates (pixels)." "\n"
        "These coordinates use the top-left corner of the top-left pixel of the image as the origin.")
      sequence<foxglove_msgs::msg::Point2> points;

      @verbatim (language="comment", text=
        "Outline color")
      foxglove_msgs::msg::Color outline_color;

      @verbatim (language="comment", text=
        "Per-point colors, if `type` is `POINTS`, or per-segment stroke colors, if `type` is `LINE_LIST`, `LINE_STRIP` or `LINE_LOOP`.")
      sequence<foxglove_msgs::msg::Color> outline_colors;

      @verbatim (language="comment", text=
        "Fill color")
      foxglove_msgs::msg::Color fill_color;

      @verbatim (language="comment", text=
        "Stroke thickness in pixels")
      double thickness;
    };
  };
};
