// generated from rosidl_adapter/resource/msg.idl.em
// with input from foxglove_msgs/msg/LocationFix.msg
// generated code does not contain a copyright notice

#include "builtin_interfaces/msg/Time.idl"

module foxglove_msgs {
  module msg {
    typedef double double__9[9];
    module LocationFix_Constants {
      const uint8 UNKNOWN = 0;
      const uint8 APPROXIMATED = 1;
      const uint8 DIAGONAL_KNOWN = 2;
      const uint8 KNOWN = 3;
    };
    @verbatim (language="comment", text=
      "foxglove_msgs/msg/LocationFix" "\n"
      "A navigation satellite fix for any Global Navigation Satellite System")
    struct LocationFix {
      @verbatim (language="comment", text=
        "Generated by https://github.com/foxglove/schemas" "\n"
        "Timestamp of the message")
      builtin_interfaces::msg::Time timestamp;

      @verbatim (language="comment", text=
        "Frame for the sensor. Latitude and longitude readings are at the origin of the frame.")
      string frame_id;

      @verbatim (language="comment", text=
        "Latitude in degrees")
      double latitude;

      @verbatim (language="comment", text=
        "Longitude in degrees")
      double longitude;

      @verbatim (language="comment", text=
        "Altitude in meters")
      double altitude;

      @verbatim (language="comment", text=
        "Position covariance (m^2) defined relative to a tangential plane through the reported position. The components are East, North, and Up (ENU), in row-major order.")
      double__9 position_covariance;

      @verbatim (language="comment", text=
        "If `position_covariance` is available, `position_covariance_type` must be set to indicate the type of covariance.")
      uint8 position_covariance_type;
    };
  };
};
