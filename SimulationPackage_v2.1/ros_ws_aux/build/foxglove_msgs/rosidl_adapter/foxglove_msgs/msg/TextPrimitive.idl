// generated from rosidl_adapter/resource/msg.idl.em
// with input from foxglove_msgs/msg/TextPrimitive.msg
// generated code does not contain a copyright notice

#include "foxglove_msgs/msg/Color.idl"
#include "geometry_msgs/msg/Pose.idl"

module foxglove_msgs {
  module msg {
    @verbatim (language="comment", text=
      "foxglove_msgs/msg/TextPrimitive" "\n"
      "A primitive representing a text label")
    struct TextPrimitive {
      @verbatim (language="comment", text=
        "Generated by https://github.com/foxglove/schemas" "\n"
        "Position of the center of the text box and orientation of the text. Identity orientation means the text is oriented in the xy-plane and flows from -x to +x.")
      geometry_msgs::msg::Pose pose;

      @verbatim (language="comment", text=
        "Whether the text should respect `pose.orientation` (false) or always face the camera (true)")
      boolean billboard;

      @verbatim (language="comment", text=
        "Font size (height of one line of text)")
      double font_size;

      @verbatim (language="comment", text=
        "Indicates whether `font_size` is a fixed size in screen pixels (true), or specified in world coordinates and scales with distance from the camera (false)")
      boolean scale_invariant;

      @verbatim (language="comment", text=
        "Color of the text")
      foxglove_msgs::msg::Color color;

      @verbatim (language="comment", text=
        "Text")
      string text;
    };
  };
};
