// generated from rosidl_adapter/resource/msg.idl.em
// with input from foxglove_msgs/msg/LinePrimitive.msg
// generated code does not contain a copyright notice

#include "foxglove_msgs/msg/Color.idl"
#include "geometry_msgs/msg/Point.idl"
#include "geometry_msgs/msg/Pose.idl"

module foxglove_msgs {
  module msg {
    module LinePrimitive_Constants {
      @verbatim (language="comment", text=
        "Generated by https://github.com/foxglove/schemas" "\n"        "Connected line segments: 0-1, 1-2, ..., (n-1)-n")
      const uint8 LINE_STRIP = 0;
      @verbatim (language="comment", text=
        "Closed polygon: 0-1, 1-2, ..., (n-1)-n, n-0")
      const uint8 LINE_LOOP = 1;
      @verbatim (language="comment", text=
        "Individual line segments: 0-1, 2-3, 4-5, ...")
      const uint8 LINE_LIST = 2;
    };
    @verbatim (language="comment", text=
      "foxglove_msgs/msg/LinePrimitive" "\n"
      "A primitive representing a series of points connected by lines")
    struct LinePrimitive {
      @verbatim (language="comment", text=
        "Drawing primitive to use for lines")
      uint8 type;

      @verbatim (language="comment", text=
        "Origin of lines relative to reference frame")
      geometry_msgs::msg::Pose pose;

      @verbatim (language="comment", text=
        "Line thickness")
      double thickness;

      @verbatim (language="comment", text=
        "Indicates whether `thickness` is a fixed size in screen pixels (true), or specified in world coordinates and scales with distance from the camera (false)")
      boolean scale_invariant;

      @verbatim (language="comment", text=
        "Points along the line")
      sequence<geometry_msgs::msg::Point> points;

      @verbatim (language="comment", text=
        "Solid color to use for the whole line. One of `color` or `colors` must be provided.")
      foxglove_msgs::msg::Color color;

      @verbatim (language="comment", text=
        "Per-point colors (if specified, must have the same length as `points`). One of `color` or `colors` must be provided.")
      sequence<foxglove_msgs::msg::Color> colors;

      @verbatim (language="comment", text=
        "Indices into the `points` and `colors` attribute arrays, which can be used to avoid duplicating attribute data." "\n"
        "" "\n"
        "If omitted or empty, indexing will not be used. This default behavior is equivalent to specifying [0, 1, ..., N-1] for the indices (where N is the number of `points` provided).")
      sequence<uint32> indices;
    };
  };
};
