// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/PrimitiveDeletion.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__PRIMITIVE_DELETION__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__PRIMITIVE_DELETION__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'MATCHING_ID'.
enum
{
  foxglove_msgs__msg__PrimitiveDeletion__MATCHING_ID = 0
};

/// Constant 'ALL'.
enum
{
  foxglove_msgs__msg__PrimitiveDeletion__ALL = 1
};

// Include directives for member types
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'id'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/PrimitiveDeletion in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/PrimitiveDeletion
  * Command to remove previously published markers
 */
typedef struct foxglove_msgs__msg__PrimitiveDeletion
{
  /// Generated by https://github.com/foxglove/schemas
  /// Timestamp of the marker. Only matching markers earlier than this timestamp will be deleted.
  builtin_interfaces__msg__Time timestamp;
  /// Type of deletion action to perform
  uint8_t type;
  /// Numeric identifier which must match if `kind` is `MATCHING_ID`.
  rosidl_runtime_c__String id;
} foxglove_msgs__msg__PrimitiveDeletion;

// Struct for a sequence of foxglove_msgs__msg__PrimitiveDeletion.
typedef struct foxglove_msgs__msg__PrimitiveDeletion__Sequence
{
  foxglove_msgs__msg__PrimitiveDeletion * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__PrimitiveDeletion__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__PRIMITIVE_DELETION__STRUCT_H_
