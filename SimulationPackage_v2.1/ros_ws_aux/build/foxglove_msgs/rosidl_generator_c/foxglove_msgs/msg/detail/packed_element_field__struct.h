// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/PackedElementField.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__PACKED_ELEMENT_FIELD__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__PACKED_ELEMENT_FIELD__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'UNKNOWN'.
enum
{
  foxglove_msgs__msg__PackedElementField__UNKNOWN = 0
};

/// Constant 'UINT8'.
enum
{
  foxglove_msgs__msg__PackedElementField__UINT8 = 1
};

/// Constant 'INT8'.
enum
{
  foxglove_msgs__msg__PackedElementField__INT8 = 2
};

/// Constant 'UINT16'.
enum
{
  foxglove_msgs__msg__PackedElementField__UINT16 = 3
};

/// Constant 'INT16'.
enum
{
  foxglove_msgs__msg__PackedElementField__INT16 = 4
};

/// Constant 'UINT32'.
enum
{
  foxglove_msgs__msg__PackedElementField__UINT32 = 5
};

/// Constant 'INT32'.
enum
{
  foxglove_msgs__msg__PackedElementField__INT32 = 6
};

/// Constant 'FLOAT32'.
enum
{
  foxglove_msgs__msg__PackedElementField__FLOAT32 = 7
};

/// Constant 'FLOAT64'.
enum
{
  foxglove_msgs__msg__PackedElementField__FLOAT64 = 8
};

// Include directives for member types
// Member 'name'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/PackedElementField in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/PackedElementField
  * A field present within each element in a byte array of packed elements.
 */
typedef struct foxglove_msgs__msg__PackedElementField
{
  /// Generated by https://github.com/foxglove/schemas
  /// Name of the field
  rosidl_runtime_c__String name;
  /// Byte offset from start of data buffer
  uint32_t offset;
  /// Type of data in the field. Integers are stored using little-endian byte order.
  uint8_t type;
} foxglove_msgs__msg__PackedElementField;

// Struct for a sequence of foxglove_msgs__msg__PackedElementField.
typedef struct foxglove_msgs__msg__PackedElementField__Sequence
{
  foxglove_msgs__msg__PackedElementField * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__PackedElementField__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__PACKED_ELEMENT_FIELD__STRUCT_H_
