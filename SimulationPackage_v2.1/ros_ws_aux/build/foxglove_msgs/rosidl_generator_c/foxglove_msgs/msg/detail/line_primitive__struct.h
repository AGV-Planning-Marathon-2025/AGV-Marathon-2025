// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/LinePrimitive.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__LINE_PRIMITIVE__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__LINE_PRIMITIVE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'LINE_STRIP'.
/**
  * Generated by https://github.com/foxglove/schemas
  * Connected line segments: 0-1, 1-2, ..., (n-1)-n
 */
enum
{
  foxglove_msgs__msg__LinePrimitive__LINE_STRIP = 0
};

/// Constant 'LINE_LOOP'.
/**
  * Closed polygon: 0-1, 1-2, ..., (n-1)-n, n-0
 */
enum
{
  foxglove_msgs__msg__LinePrimitive__LINE_LOOP = 1
};

/// Constant 'LINE_LIST'.
/**
  * Individual line segments: 0-1, 2-3, 4-5, ...
 */
enum
{
  foxglove_msgs__msg__LinePrimitive__LINE_LIST = 2
};

// Include directives for member types
// Member 'pose'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'points'
#include "geometry_msgs/msg/detail/point__struct.h"
// Member 'color'
// Member 'colors'
#include "foxglove_msgs/msg/detail/color__struct.h"
// Member 'indices'
#include "rosidl_runtime_c/primitives_sequence.h"

/// Struct defined in msg/LinePrimitive in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/LinePrimitive
  * A primitive representing a series of points connected by lines
 */
typedef struct foxglove_msgs__msg__LinePrimitive
{
  /// Drawing primitive to use for lines
  uint8_t type;
  /// Origin of lines relative to reference frame
  geometry_msgs__msg__Pose pose;
  /// Line thickness
  double thickness;
  /// Indicates whether `thickness` is a fixed size in screen pixels (true), or specified in world coordinates and scales with distance from the camera (false)
  bool scale_invariant;
  /// Points along the line
  geometry_msgs__msg__Point__Sequence points;
  /// Solid color to use for the whole line. One of `color` or `colors` must be provided.
  foxglove_msgs__msg__Color color;
  /// Per-point colors (if specified, must have the same length as `points`). One of `color` or `colors` must be provided.
  foxglove_msgs__msg__Color__Sequence colors;
  /// Indices into the `points` and `colors` attribute arrays, which can be used to avoid duplicating attribute data.
  ///
  /// If omitted or empty, indexing will not be used. This default behavior is equivalent to specifying [0, 1, ..., N-1] for the indices (where N is the number of `points` provided).
  rosidl_runtime_c__uint32__Sequence indices;
} foxglove_msgs__msg__LinePrimitive;

// Struct for a sequence of foxglove_msgs__msg__LinePrimitive.
typedef struct foxglove_msgs__msg__LinePrimitive__Sequence
{
  foxglove_msgs__msg__LinePrimitive * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__LinePrimitive__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__LINE_PRIMITIVE__STRUCT_H_
