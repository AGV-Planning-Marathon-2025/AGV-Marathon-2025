// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/TrianglesMarker.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__TRIANGLES_MARKER__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__TRIANGLES_MARKER__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'frame_id'
// Member 'id'
#include "rosidl_runtime_c/string.h"
// Member 'lifetime'
#include "builtin_interfaces/msg/detail/duration__struct.h"
// Member 'metadata'
#include "foxglove_msgs/msg/detail/key_value_pair__struct.h"
// Member 'pose'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'points'
#include "geometry_msgs/msg/detail/point__struct.h"
// Member 'color'
// Member 'colors'
#include "foxglove_msgs/msg/detail/color__struct.h"
// Member 'indices'
#include "rosidl_runtime_c/primitives_sequence.h"

/// Struct defined in msg/TrianglesMarker in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/TrianglesMarker
  * A marker representing a set of triangles or a surface tiled by triangles
 */
typedef struct foxglove_msgs__msg__TrianglesMarker
{
  /// Generated by https://github.com/foxglove/schemas
  /// Timestamp of the marker
  builtin_interfaces__msg__Time timestamp;
  /// Frame of reference
  rosidl_runtime_c__String frame_id;
  /// Identifier for the marker. A marker will replace any prior marker on the same topic with the same `id`.
  rosidl_runtime_c__String id;
  /// Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted.
  builtin_interfaces__msg__Duration lifetime;
  /// Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)
  bool frame_locked;
  /// Additional user-provided metadata associated with the marker. Keys must be unique.
  foxglove_msgs__msg__KeyValuePair__Sequence metadata;
  /// Origin of triangles relative to reference frame
  geometry_msgs__msg__Pose pose;
  /// Vertices to use for triangles, interpreted as a list of triples (0-1-2, 3-4-5, ...)
  geometry_msgs__msg__Point__Sequence points;
  /// Solid color to use for the whole shape. One of `color` or `colors` must be provided.
  foxglove_msgs__msg__Color color;
  /// Per-vertex colors (if specified, must have the same length as `points`). One of `color` or `colors` should be provided.
  foxglove_msgs__msg__Color__Sequence colors;
  /// Indices into the `points` and `colors` attribute arrays, which can be used to avoid duplicating attribute data.
  ///
  /// If omitted or empty, indexing will not be used. This default behavior is equivalent to specifying [0, 1, ..., N-1] for the indices (where N is the number of `points` provided).
  rosidl_runtime_c__uint32__Sequence indices;
} foxglove_msgs__msg__TrianglesMarker;

// Struct for a sequence of foxglove_msgs__msg__TrianglesMarker.
typedef struct foxglove_msgs__msg__TrianglesMarker__Sequence
{
  foxglove_msgs__msg__TrianglesMarker * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__TrianglesMarker__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__TRIANGLES_MARKER__STRUCT_H_
