// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/PointCloud.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__POINT_CLOUD__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__POINT_CLOUD__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'frame_id'
#include "rosidl_runtime_c/string.h"
// Member 'pose'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'fields'
#include "foxglove_msgs/msg/detail/packed_element_field__struct.h"
// Member 'data'
#include "rosidl_runtime_c/primitives_sequence.h"

/// Struct defined in msg/PointCloud in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/PointCloud
  * A collection of N-dimensional points, which may contain additional fields with information like normals, intensity, etc.
 */
typedef struct foxglove_msgs__msg__PointCloud
{
  /// Generated by https://github.com/foxglove/schemas
  /// Timestamp of point cloud
  builtin_interfaces__msg__Time timestamp;
  /// Frame of reference
  rosidl_runtime_c__String frame_id;
  /// The origin of the point cloud relative to the frame of reference
  geometry_msgs__msg__Pose pose;
  /// Number of bytes between points in the `data`
  uint32_t point_stride;
  /// Fields in `data`. At least 2 coordinate fields from `x`, `y`, and `z` are required for each point's position; `red`, `green`, `blue`, and `alpha` are optional for customizing each point's color.
  foxglove_msgs__msg__PackedElementField__Sequence fields;
  /// Point data, interpreted using `fields`
  rosidl_runtime_c__uint8__Sequence data;
} foxglove_msgs__msg__PointCloud;

// Struct for a sequence of foxglove_msgs__msg__PointCloud.
typedef struct foxglove_msgs__msg__PointCloud__Sequence
{
  foxglove_msgs__msg__PointCloud * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__PointCloud__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__POINT_CLOUD__STRUCT_H_
