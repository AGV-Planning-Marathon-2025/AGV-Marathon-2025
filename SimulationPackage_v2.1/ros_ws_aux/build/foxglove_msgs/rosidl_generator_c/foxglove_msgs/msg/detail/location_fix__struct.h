// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/LocationFix.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__LOCATION_FIX__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__LOCATION_FIX__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'UNKNOWN'.
enum
{
  foxglove_msgs__msg__LocationFix__UNKNOWN = 0
};

/// Constant 'APPROXIMATED'.
enum
{
  foxglove_msgs__msg__LocationFix__APPROXIMATED = 1
};

/// Constant 'DIAGONAL_KNOWN'.
enum
{
  foxglove_msgs__msg__LocationFix__DIAGONAL_KNOWN = 2
};

/// Constant 'KNOWN'.
enum
{
  foxglove_msgs__msg__LocationFix__KNOWN = 3
};

// Include directives for member types
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'frame_id'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/LocationFix in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/LocationFix
  * A navigation satellite fix for any Global Navigation Satellite System
 */
typedef struct foxglove_msgs__msg__LocationFix
{
  /// Generated by https://github.com/foxglove/schemas
  /// Timestamp of the message
  builtin_interfaces__msg__Time timestamp;
  /// Frame for the sensor. Latitude and longitude readings are at the origin of the frame.
  rosidl_runtime_c__String frame_id;
  /// Latitude in degrees
  double latitude;
  /// Longitude in degrees
  double longitude;
  /// Altitude in meters
  double altitude;
  /// Position covariance (m^2) defined relative to a tangential plane through the reported position. The components are East, North, and Up (ENU), in row-major order.
  double position_covariance[9];
  /// If `position_covariance` is available, `position_covariance_type` must be set to indicate the type of covariance.
  uint8_t position_covariance_type;
} foxglove_msgs__msg__LocationFix;

// Struct for a sequence of foxglove_msgs__msg__LocationFix.
typedef struct foxglove_msgs__msg__LocationFix__Sequence
{
  foxglove_msgs__msg__LocationFix * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__LocationFix__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__LOCATION_FIX__STRUCT_H_
