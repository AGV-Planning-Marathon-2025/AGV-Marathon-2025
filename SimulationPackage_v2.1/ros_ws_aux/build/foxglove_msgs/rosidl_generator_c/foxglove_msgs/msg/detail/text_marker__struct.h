// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/TextMarker.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__TEXT_MARKER__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__TEXT_MARKER__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'pose'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'color'
#include "foxglove_msgs/msg/detail/color__struct.h"
// Member 'text'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/TextMarker in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/TextMarker
  * A marker representing a text label
 */
typedef struct foxglove_msgs__msg__TextMarker
{
  /// Generated by https://github.com/foxglove/schemas
  /// Position of the center of the text box and orientation of the text. Identity orientation means the text is oriented in the xy-plane and flows from -x to +x.
  geometry_msgs__msg__Pose pose;
  /// Whether the text should respect `pose.orientation` (false) or always face the camera (true)
  bool billboard;
  /// Font size (height of one line of text)
  double font_size;
  /// Indicates whether `font_size` is a fixed size in screen pixels (true), or specified in world coordinates and scales with distance from the camera (false)
  bool scale_invariant;
  /// Color of the text
  foxglove_msgs__msg__Color color;
  /// Text
  rosidl_runtime_c__String text;
} foxglove_msgs__msg__TextMarker;

// Struct for a sequence of foxglove_msgs__msg__TextMarker.
typedef struct foxglove_msgs__msg__TextMarker__Sequence
{
  foxglove_msgs__msg__TextMarker * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__TextMarker__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__TEXT_MARKER__STRUCT_H_
