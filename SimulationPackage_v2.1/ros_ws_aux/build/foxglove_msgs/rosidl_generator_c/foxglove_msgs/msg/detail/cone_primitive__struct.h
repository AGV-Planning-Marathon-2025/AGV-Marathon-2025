// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/ConePrimitive.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__CONE_PRIMITIVE__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__CONE_PRIMITIVE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'pose'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'size'
#include "geometry_msgs/msg/detail/vector3__struct.h"
// Member 'color'
#include "foxglove_msgs/msg/detail/color__struct.h"

/// Struct defined in msg/ConePrimitive in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/ConePrimitive
  * A primitive representing a possibly truncated, possibly elliptic cone or cylinder
 */
typedef struct foxglove_msgs__msg__ConePrimitive
{
  /// Generated by https://github.com/foxglove/schemas
  /// Position of the center of the cone and orientation of the cone. The flat face(s) are perpendicular to the z-axis.
  geometry_msgs__msg__Pose pose;
  /// Size of the cone's bounding box
  geometry_msgs__msg__Vector3 size;
  /// 0-1, size of the cone's bottom face (min z) relative to the bottom of the bounding box
  double bottom_scale;
  /// 0-1, size of the cone's top face (max z) relative to the top of the bounding box
  double top_scale;
  /// Color of the cone
  foxglove_msgs__msg__Color color;
} foxglove_msgs__msg__ConePrimitive;

// Struct for a sequence of foxglove_msgs__msg__ConePrimitive.
typedef struct foxglove_msgs__msg__ConePrimitive__Sequence
{
  foxglove_msgs__msg__ConePrimitive * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__ConePrimitive__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__CONE_PRIMITIVE__STRUCT_H_
