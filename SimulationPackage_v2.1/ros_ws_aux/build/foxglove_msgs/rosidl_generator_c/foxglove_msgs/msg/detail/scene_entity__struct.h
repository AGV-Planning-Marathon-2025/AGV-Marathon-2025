// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from foxglove_msgs:msg/SceneEntity.idl
// generated code does not contain a copyright notice

#ifndef FOXGLOVE_MSGS__MSG__DETAIL__SCENE_ENTITY__STRUCT_H_
#define FOXGLOVE_MSGS__MSG__DETAIL__SCENE_ENTITY__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'frame_id'
// Member 'id'
#include "rosidl_runtime_c/string.h"
// Member 'lifetime'
#include "builtin_interfaces/msg/detail/duration__struct.h"
// Member 'metadata'
#include "foxglove_msgs/msg/detail/key_value_pair__struct.h"
// Member 'arrows'
#include "foxglove_msgs/msg/detail/arrow_primitive__struct.h"
// Member 'cubes'
#include "foxglove_msgs/msg/detail/cube_primitive__struct.h"
// Member 'spheres'
#include "foxglove_msgs/msg/detail/sphere_primitive__struct.h"
// Member 'cylinders'
#include "foxglove_msgs/msg/detail/cylinder_primitive__struct.h"
// Member 'lines'
#include "foxglove_msgs/msg/detail/line_primitive__struct.h"
// Member 'triangles'
#include "foxglove_msgs/msg/detail/triangle_list_primitive__struct.h"
// Member 'texts'
#include "foxglove_msgs/msg/detail/text_primitive__struct.h"
// Member 'models'
#include "foxglove_msgs/msg/detail/model_primitive__struct.h"

/// Struct defined in msg/SceneEntity in the package foxglove_msgs.
/**
  * foxglove_msgs/msg/SceneEntity
  * A visual element in a 3D scene. An entity may be composed of multiple primitives which all share the same frame of reference.
 */
typedef struct foxglove_msgs__msg__SceneEntity
{
  /// Generated by https://github.com/foxglove/schemas
  /// Timestamp of the entity
  builtin_interfaces__msg__Time timestamp;
  /// Frame of reference
  rosidl_runtime_c__String frame_id;
  /// Identifier for the entity. A entity will replace any prior entity on the same topic with the same `id`.
  rosidl_runtime_c__String id;
  /// Length of time (relative to `timestamp`) after which the entity should be automatically removed. Zero value indicates the entity should remain visible until it is replaced or deleted.
  builtin_interfaces__msg__Duration lifetime;
  /// Whether the entity should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)
  bool frame_locked;
  /// Additional user-provided metadata associated with the entity. Keys must be unique.
  foxglove_msgs__msg__KeyValuePair__Sequence metadata;
  /// Arrow primitives
  foxglove_msgs__msg__ArrowPrimitive__Sequence arrows;
  /// Cube primitives
  foxglove_msgs__msg__CubePrimitive__Sequence cubes;
  /// Sphere primitives
  foxglove_msgs__msg__SpherePrimitive__Sequence spheres;
  /// Cylinder primitives
  foxglove_msgs__msg__CylinderPrimitive__Sequence cylinders;
  /// Line primitives
  foxglove_msgs__msg__LinePrimitive__Sequence lines;
  /// Triangle list primitives
  foxglove_msgs__msg__TriangleListPrimitive__Sequence triangles;
  /// Text primitives
  foxglove_msgs__msg__TextPrimitive__Sequence texts;
  /// Model primitives
  foxglove_msgs__msg__ModelPrimitive__Sequence models;
} foxglove_msgs__msg__SceneEntity;

// Struct for a sequence of foxglove_msgs__msg__SceneEntity.
typedef struct foxglove_msgs__msg__SceneEntity__Sequence
{
  foxglove_msgs__msg__SceneEntity * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} foxglove_msgs__msg__SceneEntity__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // FOXGLOVE_MSGS__MSG__DETAIL__SCENE_ENTITY__STRUCT_H_
